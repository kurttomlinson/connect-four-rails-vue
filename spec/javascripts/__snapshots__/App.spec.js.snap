// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App.vue has the expected html structure 1`] = `
<div>
  <h1
    class="centered"
  >
    Connect Four in Ruby on Rails and Vue
  </h1>
   
  <div
    class="player-selector-container"
  >
    <!---->
     
    <!---->
  </div>
   
  <br />
   
  <!---->
   
  <br />
   
  <div
    class="centered"
  >
    Player to move: 1
  </div>
   
  <!---->
   
  <!---->
   
  <!---->
  <br />
   
  <!---->
   
  <h2>
    Instructions
  </h2>
   
  <p>
    The search depth determines how many moves into the future the computer should look before picking a move. Higher search depths make the computer a more difficult opponent.
  </p>
   
  <p>
    When it is a human's turn to play, click one of the buttons labeled "0" through "6" to pick a column for your move.
  </p>
   
  <p>
    Click the "Reset" button at any time to clear the game board and start over.
  </p>
   
  <h2>
    About
  </h2>
   
  <p>
    <a
      href="https://github.com/kurttomlinson/connect-four-rails-vue"
    >
      Connect Four Rails Vue
    </a>
     is built using Ruby on Rails and Vue.js. The Ruby on Rails backend computes the moves made by computer players and determines if a given sequence of moves corresponds with an end-game state (tie game, player one wins, player two wins) or an on-going game.
  </p>
   
  <p>
    The Ruby on Rails backend leverages 
    <a
      href="https://github.com/kurttomlinson/console-connect-four"
    >
      console-connect-four
    </a>
     to calculate computer moves and game results. The 
    <strong>
      console-connect-four
    </strong>
     source code is included in the 
    <strong>
      connect-four-rails-vue
    </strong>
     project as a git submodule.
  </p>
   
  <h2>
    Future Work
  </h2>
   
  <p>
    Although 
    <strong>
      connect-four-rails-vue
    </strong>
     is in a working state, there are a few improvements I'd like to make in the future.
  </p>
   
  <p>
    First, I'd like to enable the ability to save and load games. This could be easily accomplished by creating a 
    <strong>
      games
    </strong>
     table in the database with a string column named 'moves'. I'd use 
    <strong>
      serialize :moves, Array
    </strong>
     in the games model to enable easy storage and retrieval of the move sequence for each saved game.
  </p>
   
  <p>
    Second, while importing 
    <strong>
      console-connect-four
    </strong>
     as a git submodule is a workable solution, I'd like to turn it into a gem that could be more easily imported into the Rails backend without cluttering up the lib folder.
  </p>
</div>
`;
